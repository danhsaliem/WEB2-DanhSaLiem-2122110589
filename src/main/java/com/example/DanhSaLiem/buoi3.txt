Index:- index là 1 cấu trúc dữ liệu nó dùng để truy vấn dữ liệu nhanh hơn so với thông thường giúp cơ sở dữ liệu nhanh chóng thay vì tìm từng hàng thì nó sẽ tìm ra hàng  mà không cần quét toàn bộ bảng
      -khi nào sử dụng index + Khoá và cột có giá trị độc nhất thường tự động có index
                             + Tần suất sử dụng : khi sử dụng câu truy vấn càng lớn thì vc sử dụng index sẽ càng nhanh hơn 
                             +  Khi sử dụng index thì sẽ tốn bộ nhớ
                             + Dữ liệu là có đa dạng dữ liệu
      -Ưu điểm của việc sử dụng index +Thường sẽ làm tăng hiệu năng truy vấn khi điều kiện rơi vào các cột được đánh chỉ mục.
                                      +Giúp ta có thể truy vấn dữ liệu nhanh hơn.
                                      +Có thể được sử dụng để sắp xếp dữ liệu.
                                      +Các chỉ mục độc nhất đảm bảo tính duy nhất của trường trong cơ sở dữ liệu.
      -Nhược điểm của sử dụng index +Làm giảm hiệu năng các câu lệnh insert, update ,delete.
                                    +Chiếm dụng bộ nhớ.
                                    +Tốn thời gian để tạo và duy trì các chỉ mục. 
                                    +Có thể làm tăng thời
Stored procedure:-Nó giống như một "hàm" trong SQL, cho phép bạn gói một loạt lệnh lại để dùng nhiều lần, thay vì viết lại.
 - Đặc điểm của Stored Procedure:
        + Có thể chứa các câu lệnh SELECT, INSERT, UPDATE, DELETE
        + Có thể nhận tham số đầu vào và trả về giá trị
        + Giúp tăng hiệu suất vì đã được biên dịch trước
        + Giảm trùng lặp code, giúp dễ bảo trì
-Ưu điểm của stored procedure + Có thể được sử dụng để thực hiện các tác vụ phức tạp.
                              +Bảo mật: Có thể giới hạn quyền truy cập dữ liệu, chỉ cho phép chạy procedure thay vì trực tiếp vào bảng.
                              +Tối ưu hóa: Có thể được tối ưu hóa để chạy nhanh hơn.
                              +Dễ dàng bảo trì: Có thể được cập nhật và sửa đổi một cách dễ dàng
                              +Viết một lần, dùng nhiều lần, không cần viết lại code.
-Nhược Điểm : +Tìm lỗi trong stored procedure phức tạp hơn so với SQL thường.
              +Nếu viết không tối ưu, có thể làm chậm máy chủ.
              +Khi có quá nhiều procedure, việc theo dõi và cập nhật trở nên rắc rối.   
 Sử dụng Stored Procedure khi:
              + Thực hiện những phép toán phức tạp, lặp lại nhiều lần
              + Project đòi hỏi nghiêm ngặt về tốc độ thực thi

-Trigger +trong SQL là một cơ chế tự động được thiết lập trên một bảng (table) có chức năng bảo vệ tính toàn vẹn của dữ liệu và thực thi các quy tắc.
-Đặc điểm của trigger:+Chạy mà không cần gọi thủ công.
                      +Chỉ hoạt động trên bảng được định nghĩa.
                      +Không nhận tham số như stored procedure.
-Ưu điểm của Trigger + Có thể được sử dụng để thực hiện các tác vụ phức tạp
                    +Có thể giới hạn quyền truy cập dữ liệu, chỉ cho phép chạy trigger thay vì trực tiếp vào bảng.
                    +Tối ưu hóa: Có thể được tối ưu hóa để chạy nhanh hơn.
                    +Dễ dàng bảo trì: Có thể được cập nhật và sửa đổi một cách dễ dàng
-Nhược điểm của Trigger +Tìm lỗi trong trigger phức tạp hơn so với SQL thường.
                        +Nếu viết không tối ưu, có thể làm chậm máy chủ.
                        +Khi có quá nhiều trigger, việc theo dõi và cập nhật trở nên rắc rối.
                        - Sử dụng Trigger khi:
                        + Thực hiện những phép toán phức tạp, lặp lại nhiều lần
                        + Project đòi hỏi nghiêm ngặt về tốc độ thực thi
- Khi nào nên sử dụng Trigger?
        + Tự động ghi log thay đổi dữ liệu
        + Ràng buộc dữ liệu tự động
        + Kích hoạt các hành động tự động

Transaction là gì :-là một nhóm câu lệnh SQL được thực hiện tuần tự. Nếu tất cả thành công, thay đổi được lưu (commit); nếu một câu lệnh thất bại, toàn bộ bị hủy (rollback), dữ liệu trở về trạng thái ban đầu.
-Đặc điểm cuar Transaction:+Bảo toàn: đảm bảo rằng tất cả các câu lệnh trong nhóm lệnh được thực thi thành công. 
                           +Nếu không, transaction bị hủy bỏ tại thời điểm thất bại và tất cả các thao tác trước đó được khôi phục về trạng thái cũ.
                           +Nhất quán: đảm bảo rằng cơ sở dữ liệu thay đổi chính xác các trạng thái khi một transaction được thực thi thành công.
                           +Độc lập: cho phép các transaction hoạt động độc lập và minh bạch với nhau.
                           +Bền bỉ: đảm bảo rằng kết quả của một transaction được commit vẫn tồn tại trong trường hợp lỗi hệ thống.
-Ưu điểm của Transaction   +Bảo toàn dữ liệu
                           +Giúp tăng hiệu suất vì các câu lệnh được thực hiện tuần tự
                           +Giúp tăng độ tin cậy vì các thao tác được thực hiện độc lập
- Nhược điểm của Transaction +Tốn thời gian và bộ nhớ vì phải lưu trữ trạng thái
                           +Có thể làm chậm hệ thống nếu có nhiều transaction đang chờ commit
                           +hiệu xuất chậm
                           +dễ gây deaslock
                           +phức tạp trong lập trình
 - Khi nào nên sử dụng Transaction?
                           + Khi thực hiện các tác vụ phức tạp, liên quan đến nhiều bảng
                           + Khi cần đảm bảo tính toàn vẹn và nhất quán của dữ liệu
                           +khi có nguy cơ xảy ra lỗi trong quá trình xử lý
